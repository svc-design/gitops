- name: Ensure node_exporter user exists
  ansible.builtin.user:
    name: node_exporter
    system: true
    shell: /usr/sbin/nologin
    create_home: false
  when: inventory_hostname in groups[group]

- name: Download node_exporter archive
  ansible.builtin.get_url:
    url: >-
      https://github.com/prometheus/node_exporter/releases/download/v{{
      node_exporter_version | default('1.8.2') }}/node_exporter-{{
      node_exporter_version | default('1.8.2') }}.linux-amd64.tar.gz
    dest: /tmp/node_exporter.tar.gz
    mode: "0644"
  when: inventory_hostname in groups[group]

- name: Extract node_exporter
  ansible.builtin.unarchive:
    src: /tmp/node_exporter.tar.gz
    dest: /tmp
    remote_src: true
    creates: "/tmp/node_exporter-{{ node_exporter_version | default('1.8.2') }}.linux-amd64"
  when: inventory_hostname in groups[group]

- name: Install node_exporter binary
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version | default('1.8.2') }}.linux-amd64/node_exporter"
    dest: /usr/local/bin/node_exporter
    mode: '0755'
    remote_src: true
  when: inventory_hostname in groups[group]

- name: Remove node_exporter archive
  ansible.builtin.file:
    path: /tmp/node_exporter.tar.gz
    state: absent
  when: inventory_hostname in groups[group]

- name: Cleanup extracted directory
  ansible.builtin.file:
    path: "/tmp/node_exporter-{{ node_exporter_version | default('1.8.2') }}.linux-amd64"
    state: absent
  when: inventory_hostname in groups[group]

- name: Create node_exporter service
  ansible.builtin.template:
    src: node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname in groups[group]

- name: Enable and start node_exporter
  ansible.builtin.systemd:
    name: node_exporter
    enabled: true
    state: restarted
    daemon_reload: true
  when: inventory_hostname in groups[group]
